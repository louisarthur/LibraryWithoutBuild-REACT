{"ast":null,"code":"import _defineProperty from \"/Users/louiseivani/Documents/JavaScript/React/LibraryWithoutBuild-REACT/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/louiseivani/Documents/JavaScript/React/LibraryWithoutBuild-REACT/src/pages/Main/index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from \"react\";\nimport { FaBook, FaSpinner, FaPlus, FaSearch } from \"react-icons/fa\";\nimport Container from \"../../components/container/index\";\nimport { Form, SubmitButton, List, Span } from \"./styles\";\nimport StringCompare from \"string-similarity\";\nimport { booksRef } from \"../../configs/database/firebase\";\nimport Firebase from \"firebase\";\nexport default class Main extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      newTitle: \"\",\n      newAuthor: \"\",\n      newPagesBook: 0,\n      newBookread: false,\n      books: [],\n      loading: false\n    };\n\n    this.componentDidMount = async () => {\n      booksRef.on(\"value\", snap => {\n        const booksArray = [];\n        snap.forEach(shot => {\n          booksArray.push(_objectSpread({}, shot.val(), {\n            title: shot.key\n          }));\n        });\n        this.setState({\n          books: booksArray\n        });\n      });\n    };\n\n    this.componentDidUpdate = async (_, prevState) => {\n      const books = this.state.books;\n\n      if (prevState.books !== books) {\n        books.map(book => booksRef.child(book.title).update({}));\n      }\n\n      console.log(this.state.books);\n    };\n\n    this.handleDelete = book => {\n      this.setState({\n        books: this.state.books.filter(t => t !== book)\n      });\n    };\n\n    this.handleChangeRead = book => {\n      let books = this.state.books;\n      let index = this.state.books.findIndex(t => t === book);\n      books[index] = _objectSpread({}, books[index], {\n        read: book.read ? false : true\n      });\n      this.setState({\n        books: books\n      });\n    };\n\n    this.handleStateChangeTitle = async q => {\n      // this.state.books.map(book => {\n      //   const ola = StringCompare.compareTwoStrings(q.target.value, book.title);\n      //   // console.log(ola);\n      // });\n      // console.log(Object.keys(q.target.value).length);\n      // console.log(q.target.value.size);\n      // this.state.books.map(book => console.log(book.title));\n      this.setState({\n        newTitle: q.target.value\n      });\n    };\n\n    this.handleStateChangeAuthor = w => {\n      this.setState({\n        newAuthor: w.target.value\n      });\n    };\n\n    this.handleStateChangeNumberPages = r => {\n      this.setState({\n        newPagesBook: r.target.value\n      });\n    };\n\n    this.handleStateChangeRead = k => {\n      this.setState({\n        newBookread: k.target.value\n      });\n    };\n\n    this.handleSubmitState = async z => {\n      z.preventDefault();\n      this.setState({\n        loading: true\n      });\n      const _this$state = this.state,\n            newTitle = _this$state.newTitle,\n            newAuthor = _this$state.newAuthor,\n            newPagesBook = _this$state.newPagesBook,\n            newBookread = _this$state.newBookread,\n            books = _this$state.books;\n      const bookSchema = {\n        title: newTitle,\n        author: newAuthor,\n        pages: newPagesBook,\n        read: newBookread\n      };\n      this.setState({\n        books: [...books, bookSchema],\n        newTitle: \"\",\n        newAuthor: \"\",\n        newBookread: false,\n        newPagesBook: 0,\n        loading: false\n      });\n    };\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          newTitle = _this$state2.newTitle,\n          newAuthor = _this$state2.newAuthor,\n          newPagesBook = _this$state2.newPagesBook,\n          loading = _this$state2.loading,\n          books = _this$state2.books;\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(FaBook, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }), \" Books\"), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(FaSearch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }), \"Pesquisar\"), React.createElement(Form, {\n      onSubmit: this.handleSubmitState,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Add title\",\n      value: newTitle,\n      onChange: this.handleStateChangeTitle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Add Author\",\n      value: newAuthor,\n      onChange: this.handleStateChangeAuthor,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"number\",\n      placeholder: \"Add pages number\",\n      value: newPagesBook,\n      min: \"0\",\n      max: \"10000\",\n      onChange: this.handleStateChangeNumberPages,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }), React.createElement(\"select\", {\n      name: \"read\",\n      onChange: this.handleStateChangeRead,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, \"Unread\"), React.createElement(\"option\", {\n      value: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, \"Read\")), React.createElement(SubmitButton, {\n      loading: loading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, loading ? React.createElement(FaSpinner, {\n      color: \"#222\",\n      size: 15,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }) : React.createElement(FaPlus, {\n      color: \"#222\",\n      size: 15,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }))), !newTitle ? React.createElement(List, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, books.map(book => React.createElement(\"li\", {\n      key: book.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, book.title), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, book.author), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, book.pages), book.read ? React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, \"Read\") : React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, \"Unread\"), React.createElement(Span, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, book.read ? React.createElement(\"button\", {\n      type: \"button\",\n      onClick: () => this.handleChangeRead(book),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, \"Unread\") : React.createElement(\"button\", {\n      type: \"button\",\n      onClick: () => this.handleChangeRead(book),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, \"Read\"), React.createElement(\"button\", {\n      type: \"button\",\n      onClick: () => this.handleDelete(book),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, \"Remove\"))))) : React.createElement(List, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, books.map(book => StringCompare.compareTwoStrings(newTitle, book.title) > 0.1 ? React.createElement(\"li\", {\n      key: book.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, book.title), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, book.author), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, book.pages), book.read ? React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, \"Read\") : React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, \"Unread\"), React.createElement(Span, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, book.read ? React.createElement(\"button\", {\n      type: \"button\",\n      onClick: () => this.handleChangeRead(book),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, \"Unread\") : React.createElement(\"button\", {\n      type: \"button\",\n      onClick: () => this.handleChangeRead(book),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, \"Read\"), React.createElement(\"button\", {\n      type: \"button\",\n      onClick: () => this.handleDelete(book),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, \"Remove\"))) : React.createElement(Span, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }, \"Not Found\"))));\n  }\n\n}","map":{"version":3,"sources":["/Users/louiseivani/Documents/JavaScript/React/LibraryWithoutBuild-REACT/src/pages/Main/index.js"],"names":["React","Component","FaBook","FaSpinner","FaPlus","FaSearch","Container","Form","SubmitButton","List","Span","StringCompare","booksRef","Firebase","Main","state","newTitle","newAuthor","newPagesBook","newBookread","books","loading","componentDidMount","on","snap","booksArray","forEach","shot","push","val","title","key","setState","componentDidUpdate","_","prevState","map","book","child","update","console","log","handleDelete","filter","t","handleChangeRead","index","findIndex","read","handleStateChangeTitle","q","target","value","handleStateChangeAuthor","w","handleStateChangeNumberPages","r","handleStateChangeRead","k","handleSubmitState","z","preventDefault","bookSchema","author","pages","render","compareTwoStrings"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { FaBook, FaSpinner, FaPlus, FaSearch } from \"react-icons/fa\";\nimport Container from \"../../components/container/index\";\nimport { Form, SubmitButton, List, Span } from \"./styles\";\nimport StringCompare from \"string-similarity\";\nimport { booksRef } from \"../../configs/database/firebase\";\nimport Firebase from \"firebase\";\n\nexport default class Main extends Component {\n  state = {\n    newTitle: \"\",\n    newAuthor: \"\",\n    newPagesBook: 0,\n    newBookread: false,\n    books: [],\n    loading: false\n  };\n\n  componentDidMount = async () => {\n    booksRef.on(\"value\", snap => {\n      const booksArray = [];\n      snap.forEach(shot => {\n        booksArray.push({ ...shot.val(), title: shot.key });\n      });\n      this.setState({ books: booksArray });\n    });\n  };\n  // salvando o localstorage\n  componentDidUpdate = async (_, prevState) => {\n    const { books } = this.state;\n    if (prevState.books !== books) {\n      books.map(book => booksRef.child(book.title).update({}));\n    }\n    console.log(this.state.books);\n  };\n\n  handleDelete = book => {\n    this.setState({\n      books: this.state.books.filter(t => t !== book)\n    });\n  };\n  handleChangeRead = book => {\n    let books = this.state.books;\n    let index = this.state.books.findIndex(t => t === book);\n\n    books[index] = {\n      ...books[index],\n      read: book.read ? false : true\n    };\n    this.setState({ books: books });\n  };\n\n  handleStateChangeTitle = async q => {\n    // this.state.books.map(book => {\n    //   const ola = StringCompare.compareTwoStrings(q.target.value, book.title);\n    //   // console.log(ola);\n    // });\n    // console.log(Object.keys(q.target.value).length);\n\n    // console.log(q.target.value.size);\n    // this.state.books.map(book => console.log(book.title));\n    this.setState({ newTitle: q.target.value });\n  };\n  handleStateChangeAuthor = w => {\n    this.setState({ newAuthor: w.target.value });\n  };\n  handleStateChangeNumberPages = r => {\n    this.setState({ newPagesBook: r.target.value });\n  };\n  handleStateChangeRead = k => {\n    this.setState({ newBookread: k.target.value });\n  };\n\n  handleSubmitState = async z => {\n    z.preventDefault();\n    this.setState({ loading: true });\n    const {\n      newTitle,\n      newAuthor,\n      newPagesBook,\n      newBookread,\n      books\n    } = this.state;\n    const bookSchema = {\n      title: newTitle,\n      author: newAuthor,\n      pages: newPagesBook,\n      read: newBookread\n    };\n    this.setState({\n      books: [...books, bookSchema],\n      newTitle: \"\",\n      newAuthor: \"\",\n      newBookread: false,\n      newPagesBook: 0,\n      loading: false\n    });\n  };\n  render() {\n    const { newTitle, newAuthor, newPagesBook, loading, books } = this.state;\n    return (\n      <Container>\n        <h1>\n          <FaBook /> Books\n        </h1>\n        <h1>\n          <FaSearch />\n          Pesquisar\n        </h1>\n\n        <Form onSubmit={this.handleSubmitState}>\n          <input\n            type=\"text\"\n            placeholder=\"Add title\"\n            value={newTitle}\n            onChange={this.handleStateChangeTitle}\n          />\n\n          <input\n            type=\"text\"\n            placeholder=\"Add Author\"\n            value={newAuthor}\n            onChange={this.handleStateChangeAuthor}\n          />\n\n          <input\n            type=\"number\"\n            placeholder=\"Add pages number\"\n            value={newPagesBook}\n            min=\"0\"\n            max=\"10000\"\n            onChange={this.handleStateChangeNumberPages}\n          />\n\n          <select name=\"read\" onChange={this.handleStateChangeRead}>\n            <option value={false}>Unread</option>\n            <option value={true}>Read</option>\n          </select>\n\n          <SubmitButton loading={loading}>\n            {loading ? (\n              <FaSpinner color=\"#222\" size={15} />\n            ) : (\n              <FaPlus color=\"#222\" size={15} />\n            )}\n          </SubmitButton>\n        </Form>\n        {!newTitle ? (\n          <List>\n            {books.map(book => (\n              <li key={book.title}>\n                {/* <img src=\"\" alt=\"\"/> */}\n                <span>{book.title}</span>\n                <span>{book.author}</span>\n                <span>{book.pages}</span>\n                {book.read ? <span>Read</span> : <span>Unread</span>}\n                <Span>\n                  {book.read ? (\n                    <button\n                      type=\"button\"\n                      onClick={() => this.handleChangeRead(book)}\n                    >\n                      Unread\n                    </button>\n                  ) : (\n                    <button\n                      type=\"button\"\n                      onClick={() => this.handleChangeRead(book)}\n                    >\n                      Read\n                    </button>\n                  )}\n                  <button type=\"button\" onClick={() => this.handleDelete(book)}>\n                    Remove\n                  </button>\n                </Span>\n              </li>\n            ))}\n          </List>\n        ) : (\n          <List>\n            {books.map(book =>\n              StringCompare.compareTwoStrings(newTitle, book.title) > 0.1 ? (\n                <li key={book.title}>\n                  {/* <img src=\"\" alt=\"\"/> */}\n                  <span>{book.title}</span>\n                  <span>{book.author}</span>\n                  <span>{book.pages}</span>\n                  {book.read ? <span>Read</span> : <span>Unread</span>}\n                  <Span>\n                    {book.read ? (\n                      <button\n                        type=\"button\"\n                        onClick={() => this.handleChangeRead(book)}\n                      >\n                        Unread\n                      </button>\n                    ) : (\n                      <button\n                        type=\"button\"\n                        onClick={() => this.handleChangeRead(book)}\n                      >\n                        Read\n                      </button>\n                    )}\n                    <button\n                      type=\"button\"\n                      onClick={() => this.handleDelete(book)}\n                    >\n                      Remove\n                    </button>\n                  </Span>\n                </li>\n              ) : (\n                <Span>Not Found</Span>\n              )\n            )}\n          </List>\n        )}\n      </Container>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}
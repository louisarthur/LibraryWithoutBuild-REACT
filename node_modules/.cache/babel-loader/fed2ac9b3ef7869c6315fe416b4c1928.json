{"ast":null,"code":"import _defineProperty from \"/Users/louiseivani/Documents/JavaScript/React/LibraryWithoutBuild-REACT/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/louiseivani/Documents/JavaScript/React/LibraryWithoutBuild-REACT/src/pages/Main/index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from \"react\";\nimport { FaBook, FaSpinner, FaPlus, FaSearch } from \"react-icons/fa\";\nimport Container from \"../../components/container/index\";\nimport { Form, SubmitButton, List, Span } from \"./styles\";\nimport StringCompare from \"string-similarity\";\nimport Firebase from \"firebase\";\nexport default class Main extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      newTitle: \"\",\n      newAuthor: \"\",\n      newPagesBook: 0,\n      newBookread: false,\n      books: [],\n      loading: false\n    };\n\n    this.componentDidMount = async () => {\n      const rootRef = Firebase.database().ref().child(\"Books\");\n      rootRef.on(\"value\", function (snapshot) {\n        const teste = snapshot.val();\n      });\n      console.log(this.state.newTitle);\n      console.log(\"testando\");\n    };\n\n    this.handleDelete = book => {\n      this.setState({\n        books: this.state.books.filter(t => t !== book)\n      });\n    };\n\n    this.handleChangeRead = book => {\n      let books = this.state.books;\n      let index = this.state.books.findIndex(t => t === book);\n      books[index] = _objectSpread({}, books[index], {\n        read: book.read ? false : true\n      });\n      this.setState({\n        books: books\n      });\n    };\n\n    this.handleStateChangeTitle = async q => {\n      // this.state.books.map(book => {\n      //   const ola = StringCompare.compareTwoStrings(q.target.value, book.title);\n      //   // console.log(ola);\n      // });\n      // console.log(Object.keys(q.target.value).length);\n      // console.log(q.target.value.size);\n      // this.state.books.map(book => console.log(book.title));\n      this.setState({\n        newTitle: q.target.value\n      });\n    };\n\n    this.handleStateChangeAuthor = w => {\n      this.setState({\n        newAuthor: w.target.value\n      });\n    };\n\n    this.handleStateChangeNumberPages = r => {\n      this.setState({\n        newPagesBook: r.target.value\n      });\n    };\n\n    this.handleStateChangeRead = k => {\n      this.setState({\n        newBookread: k.target.value\n      });\n    };\n\n    this.handleSubmitState = async z => {\n      z.preventDefault();\n      this.setState({\n        loading: true\n      });\n      const _this$state = this.state,\n            newTitle = _this$state.newTitle,\n            newAuthor = _this$state.newAuthor,\n            newPagesBook = _this$state.newPagesBook,\n            newBookread = _this$state.newBookread,\n            books = _this$state.books;\n      const bookSchema = {\n        title: newTitle,\n        author: newAuthor,\n        pages: newPagesBook,\n        read: newBookread\n      };\n      this.setState({\n        books: [...books, bookSchema],\n        newTitle: \"\",\n        newAuthor: \"\",\n        newBookread: false,\n        newPagesBook: 0,\n        loading: false\n      });\n      Firebase.database().ref(\"Books/\" + bookSchema.title).set({\n        Author: bookSchema.author,\n        Pages: bookSchema.pages,\n        Read: bookSchema.read\n      }, function (error) {\n        if (error) {\n          console.log(\"error\");\n        } else {\n          console.log(\"deu certo o armazenamento\");\n        }\n      });\n    };\n  }\n\n  // salvando o localstorage\n  componentDidUpdate(_, prevState) {\n    const books = this.state.books;\n\n    if (prevState.books !== books) {\n      localStorage.setItem(\"books\", JSON.stringify(books));\n    }\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          newTitle = _this$state2.newTitle,\n          newAuthor = _this$state2.newAuthor,\n          newPagesBook = _this$state2.newPagesBook,\n          loading = _this$state2.loading,\n          books = _this$state2.books;\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(FaBook, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }), \" Books\"), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(FaSearch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }), \"Pesquisar\"), React.createElement(Form, {\n      onSubmit: this.handleSubmitState,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Add title\",\n      value: newTitle,\n      onChange: this.handleStateChangeTitle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Add Author\",\n      value: newAuthor,\n      onChange: this.handleStateChangeAuthor,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"number\",\n      placeholder: \"Add pages number\",\n      value: newPagesBook,\n      min: \"0\",\n      max: \"10000\",\n      onChange: this.handleStateChangeNumberPages,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }), React.createElement(\"select\", {\n      name: \"read\",\n      onChange: this.handleStateChangeRead,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, \"Unread\"), React.createElement(\"option\", {\n      value: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, \"Read\")), React.createElement(SubmitButton, {\n      loading: loading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, loading ? React.createElement(FaSpinner, {\n      color: \"#222\",\n      size: 15,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }) : React.createElement(FaPlus, {\n      color: \"#222\",\n      size: 15,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }))), !newTitle ? React.createElement(List, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, books.map(book => React.createElement(\"li\", {\n      key: book.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, book.title), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, book.author), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, book.pages), book.read ? React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, \"Read\") : React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, \"Unread\"), React.createElement(Span, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, book.read ? React.createElement(\"button\", {\n      type: \"button\",\n      onClick: () => this.handleChangeRead(book),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, \"Unread\") : React.createElement(\"button\", {\n      type: \"button\",\n      onClick: () => this.handleChangeRead(book),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, \"Read\"), React.createElement(\"button\", {\n      type: \"button\",\n      onClick: () => this.handleDelete(book),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, \"Remove\"))))) : React.createElement(List, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, books.map(book => StringCompare.compareTwoStrings(newTitle, book.title) > 0.1 ? React.createElement(\"li\", {\n      key: book.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, book.title), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, book.author), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, book.pages), book.read ? React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, \"Read\") : React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, \"Unread\"), React.createElement(Span, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, book.read ? React.createElement(\"button\", {\n      type: \"button\",\n      onClick: () => this.handleChangeRead(book),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, \"Unread\") : React.createElement(\"button\", {\n      type: \"button\",\n      onClick: () => this.handleChangeRead(book),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }, \"Read\"), React.createElement(\"button\", {\n      type: \"button\",\n      onClick: () => this.handleDelete(book),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }, \"Remove\"))) : React.createElement(Span, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }, \"Not Found\"))));\n  }\n\n}","map":{"version":3,"sources":["/Users/louiseivani/Documents/JavaScript/React/LibraryWithoutBuild-REACT/src/pages/Main/index.js"],"names":["React","Component","FaBook","FaSpinner","FaPlus","FaSearch","Container","Form","SubmitButton","List","Span","StringCompare","Firebase","Main","state","newTitle","newAuthor","newPagesBook","newBookread","books","loading","componentDidMount","rootRef","database","ref","child","on","snapshot","teste","val","console","log","handleDelete","book","setState","filter","t","handleChangeRead","index","findIndex","read","handleStateChangeTitle","q","target","value","handleStateChangeAuthor","w","handleStateChangeNumberPages","r","handleStateChangeRead","k","handleSubmitState","z","preventDefault","bookSchema","title","author","pages","set","Author","Pages","Read","error","componentDidUpdate","_","prevState","localStorage","setItem","JSON","stringify","render","map","compareTwoStrings"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { FaBook, FaSpinner, FaPlus, FaSearch } from \"react-icons/fa\";\nimport Container from \"../../components/container/index\";\nimport { Form, SubmitButton, List, Span } from \"./styles\";\nimport StringCompare from \"string-similarity\";\nimport Firebase from \"firebase\";\n\nexport default class Main extends Component {\n  state = {\n    newTitle: \"\",\n    newAuthor: \"\",\n    newPagesBook: 0,\n    newBookread: false,\n    books: [],\n    loading: false\n  };\n\n  componentDidMount = async () => {\n    const rootRef = Firebase.database()\n      .ref()\n      .child(\"Books\");\n\n    rootRef.on(\"value\", function(snapshot) {\n      const teste = snapshot.val();\n    });\n    console.log(this.state.newTitle);\n    console.log(\"testando\");\n  };\n\n  // salvando o localstorage\n  componentDidUpdate(_, prevState) {\n    const { books } = this.state;\n    if (prevState.books !== books) {\n      localStorage.setItem(\"books\", JSON.stringify(books));\n    }\n  }\n\n  handleDelete = book => {\n    this.setState({\n      books: this.state.books.filter(t => t !== book)\n    });\n  };\n  handleChangeRead = book => {\n    let books = this.state.books;\n    let index = this.state.books.findIndex(t => t === book);\n\n    books[index] = {\n      ...books[index],\n      read: book.read ? false : true\n    };\n    this.setState({ books: books });\n  };\n\n  handleStateChangeTitle = async q => {\n    // this.state.books.map(book => {\n    //   const ola = StringCompare.compareTwoStrings(q.target.value, book.title);\n    //   // console.log(ola);\n    // });\n    // console.log(Object.keys(q.target.value).length);\n\n    // console.log(q.target.value.size);\n    // this.state.books.map(book => console.log(book.title));\n    this.setState({ newTitle: q.target.value });\n  };\n  handleStateChangeAuthor = w => {\n    this.setState({ newAuthor: w.target.value });\n  };\n  handleStateChangeNumberPages = r => {\n    this.setState({ newPagesBook: r.target.value });\n  };\n  handleStateChangeRead = k => {\n    this.setState({ newBookread: k.target.value });\n  };\n\n  handleSubmitState = async z => {\n    z.preventDefault();\n    this.setState({ loading: true });\n    const {\n      newTitle,\n      newAuthor,\n      newPagesBook,\n      newBookread,\n      books\n    } = this.state;\n    const bookSchema = {\n      title: newTitle,\n      author: newAuthor,\n      pages: newPagesBook,\n      read: newBookread\n    };\n    this.setState({\n      books: [...books, bookSchema],\n      newTitle: \"\",\n      newAuthor: \"\",\n      newBookread: false,\n      newPagesBook: 0,\n      loading: false\n    });\n\n    Firebase.database()\n      .ref(\"Books/\" + bookSchema.title)\n      .set(\n        {\n          Author: bookSchema.author,\n          Pages: bookSchema.pages,\n          Read: bookSchema.read\n        },\n        function(error) {\n          if (error) {\n            console.log(\"error\");\n          } else {\n            console.log(\"deu certo o armazenamento\");\n          }\n        }\n      );\n  };\n\n  render() {\n    const { newTitle, newAuthor, newPagesBook, loading, books } = this.state;\n    return (\n      <Container>\n        <h1>\n          <FaBook /> Books\n        </h1>\n        <h1>\n          <FaSearch />\n          Pesquisar\n        </h1>\n\n        <Form onSubmit={this.handleSubmitState}>\n          <input\n            type=\"text\"\n            placeholder=\"Add title\"\n            value={newTitle}\n            onChange={this.handleStateChangeTitle}\n          />\n\n          <input\n            type=\"text\"\n            placeholder=\"Add Author\"\n            value={newAuthor}\n            onChange={this.handleStateChangeAuthor}\n          />\n\n          <input\n            type=\"number\"\n            placeholder=\"Add pages number\"\n            value={newPagesBook}\n            min=\"0\"\n            max=\"10000\"\n            onChange={this.handleStateChangeNumberPages}\n          />\n\n          <select name=\"read\" onChange={this.handleStateChangeRead}>\n            <option value={false}>Unread</option>\n            <option value={true}>Read</option>\n          </select>\n\n          <SubmitButton loading={loading}>\n            {loading ? (\n              <FaSpinner color=\"#222\" size={15} />\n            ) : (\n              <FaPlus color=\"#222\" size={15} />\n            )}\n          </SubmitButton>\n        </Form>\n        {!newTitle ? (\n          <List>\n            {books.map(book => (\n              <li key={book.title}>\n                {/* <img src=\"\" alt=\"\"/> */}\n                <span>{book.title}</span>\n                <span>{book.author}</span>\n                <span>{book.pages}</span>\n                {book.read ? <span>Read</span> : <span>Unread</span>}\n                <Span>\n                  {book.read ? (\n                    <button\n                      type=\"button\"\n                      onClick={() => this.handleChangeRead(book)}\n                    >\n                      Unread\n                    </button>\n                  ) : (\n                    <button\n                      type=\"button\"\n                      onClick={() => this.handleChangeRead(book)}\n                    >\n                      Read\n                    </button>\n                  )}\n                  <button type=\"button\" onClick={() => this.handleDelete(book)}>\n                    Remove\n                  </button>\n                </Span>\n              </li>\n            ))}\n          </List>\n        ) : (\n          <List>\n            {books.map(book =>\n              StringCompare.compareTwoStrings(newTitle, book.title) > 0.1 ? (\n                <li key={book.title}>\n                  {/* <img src=\"\" alt=\"\"/> */}\n                  <span>{book.title}</span>\n                  <span>{book.author}</span>\n                  <span>{book.pages}</span>\n                  {book.read ? <span>Read</span> : <span>Unread</span>}\n                  <Span>\n                    {book.read ? (\n                      <button\n                        type=\"button\"\n                        onClick={() => this.handleChangeRead(book)}\n                      >\n                        Unread\n                      </button>\n                    ) : (\n                      <button\n                        type=\"button\"\n                        onClick={() => this.handleChangeRead(book)}\n                      >\n                        Read\n                      </button>\n                    )}\n                    <button\n                      type=\"button\"\n                      onClick={() => this.handleDelete(book)}\n                    >\n                      Remove\n                    </button>\n                  </Span>\n                </li>\n              ) : (\n                <Span>Not Found</Span>\n              )\n            )}\n          </List>\n        )}\n      </Container>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}